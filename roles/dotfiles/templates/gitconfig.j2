[user]
  name = {{user_git_name}}
  email = {{user_default_github_email}}
[core]
  excludesfile = ~/.gitexcludes
  pager = delta
[interactive]
  diffFilter = delta --color-only
[delta]
  navigate = true
[diff]
  colorMoved = default
  tool = vscode
[difftool "sublime"]
  cmd = subl -w --diff $LOCAL $REMOTE
[log]
  abbrevCommit = true
[color]
  ui = auto
[color "branch"]
  upstream = cyan
[merge]
  conflictstyle = diff3
[fetch]
  prune = true
[pull]
#  rebase = true
[push]
  default = current
[branch]
	# Show most recently changed branches first.
	sort = -committerdate
[alias]
  # List available aliases
  aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
  # Display tree-like log, because default log is a painâ€¦
  lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
  # Useful when you have to update your last commit
  # with staged files without editing the commit message.
  oops = commit --amend --no-edit
  # Ensure that force-pushing won't lose someone else's work (only mine).
  push-with-lease = push --force-with-lease
  # Edit last commit message
  reword = commit --amend
  # Undo last commit but keep changed files in stage
  uncommit = reset --soft HEAD~1
  # Remove file(s) from Git but not from disk
  untrack = rm --cache --
