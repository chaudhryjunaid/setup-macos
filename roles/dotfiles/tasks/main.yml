- name: get user name for git
  pause:
    prompt: "Please enter the name to use for git commits"
  register: prompt
  when: user_git_name is not defined or user_git_name == ""
- set_fact:
    user_git_name: "{{ prompt.user_input | default(lookup('pipe', 'id -F'), true) | default(ansible_user_id, true) }}"
  when: user_git_name is not defined or user_git_name == ""
- name: get user github email
  pause:
    prompt: "Please enter the email you want to use with git"
  register: prompt
  when: user_default_github_email is not defined or user_default_github_email == ""
- set_fact:
    user_default_github_email: "{{ prompt.user_input | default(user_fallback_github_email, true) }}"
  when: user_default_github_email is not defined or user_default_github_email == ""
- name: download dotfiles repo
  git:
    repo: "git@github.com:chaudhryjunaid/rcfiles.git"
    dest: "{{ansible_user_dir}}/rcfiles"
- name: Create required directories
  file:
    path: "{{ ansible_user_dir }}/{{ item }}"
    state: directory
  with_items:
    - data
    - work
    - projects
    - .vim/undo
    - .vim/backups
    - .vim/swaps
- name: link gitexcludes
  file:
    src: "{{ansible_user_dir}}/rcfiles/gitexcludes"
    dest: "{{ansible_user_dir}}/.gitexcludes"
    state: link
- template:
    src: gitconfig.j2
    dest: "{{ansible_user_dir}}/.gitconfig"
- name: link zshrc.custom
  file:
    src: "{{ansible_user_dir}}/rcfiles/zshrc.custom"
    dest: "{{ansible_user_dir}}/.zshrc.custom"
    state: link
- name: link editorconfig
  file:
    src: "{{ansible_user_dir}}/rcfiles/editorconfig"
    dest: "{{ansible_user_dir}}/.editorconfig"
    state: link
- name: link vimrc
  file:
    src: "{{ansible_user_dir}}/rcfiles/vimrc"
    dest: "{{ansible_user_dir}}/.vimrc"
    state: link
